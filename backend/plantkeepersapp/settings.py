"""
Django settings for plantkeepersapp project.

Generated by 'django-admin startproject' using Django 5.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os
from dotenv import load_dotenv

# Load environment variables from .env file
load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv('SECRET_KEY', 'django-insecure-9i!(3-dk^s(d%r*r22uyj02oy1mnqm2p@t6rkm$4l$icxniwbb')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.getenv('DEBUG', 'False').lower() == 'true'

# Update allowed hosts to include App Engine and Cloud Run URLs
ALLOWED_HOSTS = os.getenv('ALLOWED_HOSTS', 'localhost,127.0.0.1,.appspot.com,.run.app,*').split(',')


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # Third-party apps
    'rest_framework',
    'corsheaders',
    # Local apps
    'plant_api',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',  # Added CORS middleware
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

# CORS settings for frontend access
# For production, only allow specific origins
CORS_ALLOWED_ORIGINS = [
    # Add your Firebase hosting URL here (example: https://your-app.web.app)
    os.getenv('FRONTEND_URL', 'http://localhost:3000'),
    'https://localhost:3000',
    'http://localhost:19006',  # Expo development server
    'https://plantkeepers-app.web.app',  # Firebase hosting URL
    'https://plantkeepers-app.firebaseapp.com',  # Firebase hosting URL (alternative domain)
]

# Also allow all origins in development
if DEBUG:
    CORS_ALLOW_ALL_ORIGINS = True

# Additional CORS configurations
CORS_ALLOW_CREDENTIALS = True
CORS_ALLOW_METHODS = [
    'DELETE',
    'GET',
    'OPTIONS',
    'PATCH',
    'POST',
    'PUT',
]

# OpenAI API settings
OPENAI_API_KEY = os.getenv('OPENAI_API_KEY', '')

# AdMob Integration Settings
ADMOB_CONFIG = {
    'APP_ID_ANDROID': os.getenv('ADMOB_APP_ID_ANDROID', 'ca-app-pub-3940256099942544~3347511713'),  # Test App ID
    'APP_ID_IOS': os.getenv('ADMOB_APP_ID_IOS', 'ca-app-pub-3940256099942544~1458002511'),  # Test App ID
    'API_KEY': os.getenv('ADMOB_API_KEY', ''),
    # Default test ad unit IDs (for development)
    'TEST_BANNER_AD_UNIT_ID': 'ca-app-pub-3940256099942544/6300978111',
    'TEST_INTERSTITIAL_AD_UNIT_ID': 'ca-app-pub-3940256099942544/1033173712',
    'TEST_REWARDED_AD_UNIT_ID': 'ca-app-pub-3940256099942544/5224354917',
    'TEST_MODE': os.getenv('ADMOB_TEST_MODE', 'True').lower() == 'true',
    # Production ad unit IDs (set these in your .env file)
    'BANNER_HOME_AD_UNIT_ID': os.getenv('ADMOB_BANNER_HOME_AD_UNIT_ID', ''),
    'BANNER_PLANT_DETAIL_AD_UNIT_ID': os.getenv('ADMOB_BANNER_PLANT_DETAIL_AD_UNIT_ID', ''),
    'INTERSTITIAL_AD_UNIT_ID': os.getenv('ADMOB_INTERSTITIAL_AD_UNIT_ID', ''),
    'REWARDED_AD_UNIT_ID': os.getenv('ADMOB_REWARDED_AD_UNIT_ID', ''),
}

ROOT_URLCONF = 'plantkeepersapp.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'plantkeepersapp.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static')

# Media files
MEDIA_URL = 'media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
